####index.tsx####
import React from "react";
import ReactDOM from "react-dom";
import App from './App';
import reportWebVitals from './reportWebVitals';
import './App.css';
import { BrowserRouter } from "react-router-dom";

ReactDOM.render(
  <React.StrictMode>
    <BrowserRouter>
      <App />
    </BrowserRouter>
  </React.StrictMode>,
  document.getElementById('root')
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals(console.log);

####App.tsx####
import React from 'react';
import { Link, Outlet, Route, Routes, useLocation } from 'react-router-dom';
import './App.css';
import Header from './components/Header';
import Home from './components/Home';
import Modal from './components/Modal';
import SearchMovie from './components/SearchMovie';

const App = () => {
  const location = useLocation();

  const state = location.state as { backgroundLocation?: Location};

  return (
    <>
      <Routes location={state?.backgroundLocation || location}>
        <Route path='/' element={<Layout />}>
          <Route path='home' element={<Home />} />
          <Route path='search' element={<SearchMovie />} />
          <Route path='/detail/:imdbId' element={<Modal />} />
        </Route>
      </Routes>

      {state?.backgroundLocation && (
        <Routes>
          <Route path='/detail/:imdbId' element={<Modal />} />
        </Routes>
      )}
    </>
  );
};

const Layout = () => {
  return (
    <div>
      <Header text="Movie Search APP" />
      <nav className='home-navigator'>
        <Link className='home-link' to='/home'>Home</Link>
      </nav>
      <nav className='search-movie-navigator'>
        <Link className='search-condition-link' to='/search'>Search</Link>
      </nav>
      <Outlet />
    </div>
  );
};

export default App;

####App.css####
.search-movie-component {
  text-align: center;
}

.App-header {
  background-color: #282c34;
  height: 70px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
  padding: 20px;
}

.spinner {
  height: 80px;
  margin: auto;
}

.App-intro {
  font-size: large;
}

/* new css for movie component */

* {
  box-sizing: border-box;
}

.movies {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
}

.App-header h2 {
  margin: 0;
}

.add-movies {
  text-align: center;
}

.add-movies button {
  font-size: 16px;
  padding: 8px;
  margin: 0 10px 30px 10px;
}

.movie {
  padding: 5px 25px 10px 25px;
  max-width: 25%;
}

.errorMessage {
  margin: auto;
  font-weight: bold;
  color: rgb(161, 15, 15);
}


.search {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  margin-top: 10px;
}

.MuiSvgIcon-root:hover {
  color: darkgray;
}

.search-button {
  margin-top: -1rem;
}

#search-condition-title {
  width: 30%;
  min-width: 170px;
  height: 2.5rem;
}

#search-condition-title::-webkit-search-cancel-button {
  cursor: pointer;
}

#search-condition-year {
  width: 8%;
  min-width: 1rem;
}

.search-condition-item-name {
  margin-top: 0.5rem;
  padding: 0.1rem;
  padding-left: 1rem;
  padding-right: 0.5rem;
  vertical-align: middle;
}

.required::after {
  content: ' *';
  color: red;
  vertical-align: middle;
  margin-top: 1rem;
}

.loader {
  margin: 0 auto;
}

.detail-dialog {
  display: "flex";
  position: relative;
  background-color: #282828 !important;
  justify-content: "center";
  align-items: center;
  padding: "8px 8px";
  border-radius: 0.5rem;
}

.detail-dialog-header {
  display: flex;
}

.detail-dialog-title {
  color: white;
}

.detail-dialog-content {
  color: white;
}

.detail-dialog-close-button {
  position: absolute;
  top: -1rem;
  left: 48rem;
  color: white !important;
}

.description {
  text-align: center;
}

@media screen and (min-width: 694px) and (max-width: 915px) {
  .movie {
    max-width: 33%;
  }
}

@media screen and (min-width: 652px) and (max-width: 693px) {
  .movie {
    max-width: 50%;
  }
}


@media screen and (max-width: 651px) {
  .movie {
    max-width: 100%;
    margin: auto;
  }
}
